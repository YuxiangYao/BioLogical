% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DNS_Percolation.R
\name{DNS_Percolation}
\alias{DNS_Percolation}
\title{Analyze percolation within system}
\usage{
DNS_Percolation(
  Size = 1000L,
  SimStep = 1000L,
  ObsWin = 1000L,
  OutPutState = FALSE,
  OBF_Type = "R",
  OBF_iPara1 = 1L,
  OBF_iPara2 = 1L,
  OBF_Ratio = 0.1,
  RBF_Bias = c(0.5, 0.5),
  Net_fPara = 4,
  Init_1_Ratio = c(0.5, 0.5),
  NumSys = 2L,
  LatType = 4L,
  UpdateRule = 1L
)
}
\arguments{
\item{Size}{integer, size of system}

\item{SimStep}{integer, steps of simulating system}

\item{ObsWin}{integer, Observe window, ensure the stable cluster.}

\item{OutPutState}{bool, should output all states? (Default: \code{FALSE})}

\item{OBF_Type}{a character, ordered Boolean type (OBF)}

\item{OBF_iPara1}{integer, configuration parameter for OBF}

\item{OBF_iPara2}{integer, configuration parameter for OBF (Not necessariy for some types of OBF)}

\item{OBF_Ratio}{float, proportion of ordered Boolean function within system}

\item{RBF_Bias}{floatvector, biases of random function (each is (0,1), sum=1)}

\item{Net_fPara}{float, topological configured parameters}

\item{Init_1_Ratio}{floatvector, proportion of each value (same length as L)}

\item{NumSys}{integer, number of discrete value}

\item{LatType}{integer, 4:square, 6: hexangular, 3:triangular}

\item{UpdateRule}{integer, update rule: 1 syn, 2 asy, 3 quick-asy}
}
\value{
List, [[1]] NumericVector[2], [1] max stable cluster fraction, 
non-zero means percolation happens; [[2]] IntegerVector[\code{Size}], 
System stable/unstable state cases (if \code{OutPutState} is \code{TRUE}). 
[[3]] if those stable nodes belong to MAX cluster.
}
\description{
Here employs maximal stable components (MSC) of Boolean networks embedded in square 
lattice as measure of percolations. A random state of a given Boolean network
finally fall in one attractor with stable or oscillatory nodes. Here observe 
the MSC can form a continuous path as the occurrence of percolation. Please note
that this definition sources from [\href{10.1073/pnas.1534782100}{Shmulevich,2003}]. 
There are also other definitions of "percolation".
}
\details{
Ensure that all parameters are properly set. Some parameters are fixed due to specific tasks. \code{Size}, \code{SimStep}, 
\code{ObsWin} are dynamic parameters for simualtion. To avoid transient states, recommend \code{SimStep} >= \code{Size}. 
\code{OBF_Type}, \code{OBF_iPara1}, \code{OBF_iPara2}, \code{RBF_Bias}, \code{OBF_Ratio}, configure ordered functions. 
See their detail roles in \link{BoolFun_Generator}. \code{Net_fPara} control lattice type: (\code{4}, Square; \code{3}, triangle; \code{6}, hexagon); here \code{Size} is an even squared number.
}
\examples{
# Test percolation random and canalized functions (70\%)
# set.seed(20250101L)
# DNS_Percolation(2500L, 2500L, 2000L, OBF_Type='C', 
#   OBF_iPara1=2, OBF_iPara2=-1, OBF_Ratio=0.7)
# Return [[1]] [1] 0.6456 0.6628
set.seed(20250101L)
DNS_Percolation(2500L, 2500L, 2000L, OBF_Type='C', 
  OBF_iPara1=2, OBF_iPara2=-1, OBF_Ratio=0.7)

# Test percolation random and canalized functions (30\%)
# set.seed(20250102L)
# DNS_Percolation(2500L, 2500L, 2000L, OBF_Type='C', 
#  OBF_iPara1=2, OBF_iPara2=-1, OBF_Ratio=0.3)
# Return [[1]] [1] 0.0000 0.3448
set.seed(20250102L)
DNS_Percolation(2500L, 2500L, 2000L, OBF_Type='C', 
  OBF_iPara1=2, OBF_iPara2=-1, OBF_Ratio=0.3)

}
