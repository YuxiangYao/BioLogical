% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BoolFun_Expression2MapTable.R
\name{BoolFun_Expression2MapTable}
\alias{BoolFun_Expression2MapTable}
\title{Convert Boolean expressions as mapping tables}
\usage{
BoolFun_Expression2MapTable(BoolExpChr, TableForm = FALSE)
}
\arguments{
\item{BoolExpChr}{a valid Boolean expression, function without judgment capacity.}

\item{TableForm}{bool, should return table form? (\code{TRUE}, matrix; \code{FALSE}, a bool-vector)}
}
\value{
a bool-vector or only-show the table.
}
\description{
The purpose is to reveal the relations between the mapping 
results of Boolean functions and their inputs. Its implementation relies on 
regular expressions.
}
\details{
Note that the function does not assess the validity of the expression.
}
\examples{
# Convert \code{X = ((NOT A AND B)) OR C}.
# BoolFun_Expression2MapTable("X = ((NOT A AND B)) OR C")
# Return bool-vec c(FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE).
boolexp="X = ((NOT A AND B)) OR C"
BoolFun_Expression2MapTable(boolexp)

# Show-only \code{Y = (NOT A_a OR NOT B) AND (cc OR dd)}.
# BoolFun_Expression2MapTable("Y = (NOT A_a OR NOT B) AND (cc OR dd)", TRUE)
# Return a truth table: (0,0,0,0 | 0), (0,0,0,1 | 1), ..., (1,1,1,1 | 0).
# Last column is c(0,1,1,1, 0,1,1,1, 0,1,1,1, 0,0,0,0)
boolexp="Y = (NOT A_a OR NOT B) AND (cc OR dd)"
BoolFun_Expression2MapTable(boolexp,TRUE)
}
