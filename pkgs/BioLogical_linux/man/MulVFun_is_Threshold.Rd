% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MulVFun_is_Threshold.R
\name{MulVFun_is_Threshold}
\alias{MulVFun_is_Threshold}
\title{Decode the information of a multi-valued linear threshold function}
\usage{
MulVFun_is_Threshold(aVec, k, L, PrintOut = FALSE)
}
\arguments{
\item{aVec}{an IntegerVector, a mapping table of function.}

\item{k}{an integer, k-variable of function.}

\item{L}{an integer, L-level multi-valued system.}

\item{PrintOut}{a Boolean value, show output to the terminal.}
}
\value{
a 3-element list (if it is threshold): [[1]] An integer [[2]] describes 
weights of each input variable (from low to high), [[3]] records the L-1 boundaries of mapping 
values (See examples).
}
\description{
This function can return a \code{list} records information of
whether given function is threshold, weights, baseline and threshold.
It is also compatible with Boolean system (L=2).
}
\examples{
# Show the information of a multi-valued linear threshold function.
# set.seed(2025);
# A_MulV_Fun=MulVFun_Generator("T", k=3L, L=3L, MappingTable=TRUE)
# View(A_MulV_Fun)# Show the mapping table.
# A_MulV_Fun_Thres=MulVFun_is_Threshold(A_MulV_Fun[,4], 3, 3, TRUE);
# Return: 
# f(~)=2*x_2-1*x_1-2*x_0
# Threshold intervals for L values: (-inf,-3], (-3,0], (0,+inf)
set.seed(2025);
A_MulV_Fun=MulVFun_Generator("T", k=3L, L=3L, MappingTable=TRUE)
A_MulV_Fun_Thres=MulVFun_is_Threshold(A_MulV_Fun[,4], 3, 3, TRUE);

# Single input Quaternary funciton:
# A_MulV_Fun_Thres=MulVFun_is_Threshold(c(1,1,2,3), 1, 4, TRUE);
# Return:
# f(~)=1*x_0
# Threshold intervals for L values: (-inf,-1], (-1,1], (1,2], (2,+inf)
A_MulV_Fun_Thres=MulVFun_is_Threshold(c(1,1,2,3), 1, 4, TRUE);

}
