% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MulVFun_Polynomial.R
\name{MulVFun_Polynomial}
\alias{MulVFun_Polynomial}
\title{Convert a multi-valued function as polynomial forms}
\usage{
MulVFun_Polynomial(aVec, k = 2, L = 3)
}
\arguments{
\item{aVec}{a vector, represents a mapping table of multi-valued function.}

\item{k}{An integer for the number of input-variable (Default: 2).}

\item{L}{An integer for the level of discrete system (Default: 3).}
}
\value{
a List, [[1]] is.SAT ture or not? [[2]] Weights of coupled variable. 
[[3]] Highest order number.
}
\description{
Usually, Boolean functions are presented as logical expressions
including variables and symbols (AND, OR, NOT). When limited to arithmetic 
denotations, a Boolean function can exist only one strict polynomial forms and 
infinite threshold-based interpretations. Sometimes, it can be involved with 
higher-order terms. Please note that this "threshold-based" is not standard 
definition of threshold-based one that only contains ist-order terms.
}
\examples{
# Convert the a multi-valued function into a polynomial expression.
# MulVFun_Polynomial(c(0,1,2,1,1,2,2,1,2), k=2L, L=3L)
# Return [[1]] sat:TRUE, 
# [[2]] Weight:
#    x_1         x_2 threshold_1 threshold_2 threshold_3 
#      2           1          -2           0           0
# [[3]] HighOrder: 1
MulVFun_Polynomial(c(0,1,2,1,1,2,2,1,2), k=2L, L=3L)
}
