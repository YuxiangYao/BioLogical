% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MulVFun_is_Signed.R
\name{MulVFun_is_Signed}
\alias{MulVFun_is_Signed}
\title{Decode the information of a multi-valued signed function}
\usage{
MulVFun_is_Signed(aVec, k, L, PrintOut = TRUE)
}
\arguments{
\item{aVec}{an IntegerVector, a mapping table of function.}

\item{k}{an integer, k-variable of function.}

\item{L}{an integer, L-level multi-valued system.}

\item{PrintOut}{a Boolean value, show output abnormal message to the 
terminal. (Default: TRUE)}
}
\value{
a 3-element list (if it is signed): [[1]] An integer [[2]] describes 
weights of each input variable (L*(kL) matrix), [[3]] records deltas of L 
values (See examples).
}
\description{
This function can return a \code{list} records information of
whether given function is, the weight matrix, and baselines.
}
\examples{
# Generate a domainted function and analyze it belong to signed class or not.
# set.seed(1001);
# A_MulV_Fun=MulVFun_Generator("D", k=3L, L=3L, MappingTable=TRUE);
# A_MulV_Fun_Sign=MulVFun_is_Signed(A_MulV_Fun[,4], 3, 3, TRUE);
# View(A_MulV_Fun); # Show the mapping table 
#       v2 v1 v0 f_out
#  [1,]  0  0  0     2
#  [2,]  0  0  1     2
#  [3,]  0  0  2     1
#  [4,]  0  1  0     2
#  [5,]  0  1  1     0
#  [6,]  0  1  2     0
#          ... ... 
# Check the "signed" regulatory pattern (User can test other cases.)
# A_MulV_Fun_Sign[[2]]\%*\%c(1,0,0, 1,0,0, 1,0,0) ==> (-4,-1,0) ==> f_out(0,0,0)=2;
# A_MulV_Fun_Sign[[2]]\%*\%c(0,0,1, 1,0,0, 1,0,0) ==> (-2,-1,-5) ==> f_out(0,0,2)=1;
# A_MulV_Fun_Sign[[2]]\%*\%c(0,1,0, 0,0,1, 1,0,0) ==> (4,-1,1) ==> f_out(0,2,1)=0;
# ... ... 
set.seed(1001)
A_MulV_Fun=MulVFun_Generator("D", k=3L, L=3L, MappingTable=TRUE)
A_MulV_Fun_Sign=MulVFun_is_Signed(A_MulV_Fun[,4], 3, 3, TRUE)
A_MulV_Fun_Sign[[2]]\%*\%c(1,0,0, 1,0,0, 1,0,0)
A_MulV_Fun_Sign[[2]]\%*\%c(0,0,1, 1,0,0, 1,0,0)
A_MulV_Fun_Sign[[2]]\%*\%c(0,1,0, 0,0,1, 1,0,0)

}
